Upcoming:

    - Fix bug with task state dropdown not refreshing according to transition rule edits in the feature template editor
    - Default the set of transition rules when creating a new feature template
    - Create the real UI for the dependency task. During template editing mode it should allow setting dependencies on feature templates. If not template then it should only list features that are not a template.
    - Does the feature dto need a way to store the current system state, did I miss that ?
    - Draw the main form treeview up to the point where it knows what type of new features can be added to which system
    - Start fleshing out the cloning routine that will need to happen against feature templates (and all task templates
        when they are instanced). Plus the interface method that the task factory will need to be able to perform to clone
        task data.
        Note: The cloning routine will need to have the Feature vars design in it somehow. May be easier to just shoehorn this in later.
    - Implement the generic text based task and all current interface methods for it
    - Hook up instancing with what we have, be able to see features show up in the main form
    - Work on making the autoprogress methods of the tasks work and having the main program call this for the correct
            tasks on a regular interval
    - Put in the logic for the autoprogression of system state within a feature
    - Create the main UI that shows the tasks sorted in the way the design plan indicates
    - Be able to double click on tasks in the main UI and bring up dialogs to work from.
    - Ability to manually change the task state via the task dialog
    - Verify that a Task.AutoProgress call works to update any open task dialog with the correct state.


